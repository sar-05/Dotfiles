#!/usr/bin/env bash

#Define variables
pkgs_path="$HOME/Backups/packages"
main_pkgs_path="$pkgs_path/official"
aur_pkgs_path="$pkgs_path/aur"
flatpaks_pkgs_path="$pkgs_path/flatpaks"
exclude_file_path="$XDG_CONFIG_HOME/rclone/rclone-exclude.txt"
remote="Proton"
date=$(date +%F-%H%M)

# Check if rclone is installed
if ! command -v rclone > /dev/null; then
  echo "Rclone package missing"
  exit
fi

#Check if remote has been configured
if ! grep -q "$remote" <<< "$(rclone listremotes 2>&1)"; then
  echo "Remote $remote hasn't been configured yet"
  exit
fi

#Define packages backup setup function
pkgs_backup_setup() {
    #Make sure backup directory exists
    if [ ! -d $1 ]; then
    mkdir -p $1
    fi
    # Remove oldest backup if more than 5
    local backups_num=$(ls -l $1 | grep -v "total" | wc -l)
    if [ $backups_num -ge 5 ]; then
    local oldest_backup=$(ls -ltr $1 | grep -v total | head -n 1 | awk '{print $NF}')
    rm "$1/$oldest_backup"
    fi
}

# Call setup function for official packages and AUR packages
pkgs_backup_setup $main_pkgs_path
pkgs_backup_setup $aur_pkgs_path
pkgs_backup_setup $flatpaks_pkgs_path

# Create backup files
pacman -Qe > "$main_pkgs_path/$date-official-packages"
pacman -Qm > "$aur_pkgs_path/$date-aur-packages"
flatpak list --columns=application | grep -v "ID" > "$flatpaks_pkgs_path/$date-flatpak-packages"

# Check existance of exclude_file
[ ! -f "$exclude_file_path" ] && touch "$exclude_file_path" && echo "Warning: Empty exclude file!"

# Sync files to Proton Drive
rclone sync ~/Documents --exclude-from "$exclude_file_path" "$remote":'Documents' -vv
rclone sync ~/Backups --exclude-from "$exclude_file_path" "$remote":'Backups' -vv
rclone sync ~/Dotfiles --exclude ".git/**" "$remote":'Dotfiles' -vv
